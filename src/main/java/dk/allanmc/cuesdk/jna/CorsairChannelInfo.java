package dk.allanmc.cuesdk.jna;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * contains information about separate channel of the DIY-device.<br>
 * <i>native declaration : target\CUESDK\include\CUESDK.h:130</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CorsairChannelInfo extends Structure {
    /**
     * total number of LEDs connected to the channel.
     */
    public int totalLedsCount;
    /**
     * number of LED-devices (fans, strips, etc.) connected to the channel which is controlled by the DIY device.
     */
    public int devicesCount;
    /**
     * array containing information about each separate LED-device connected to the channel controlled by the DIY device. Index of the LED-device in array is same as the index of the LED-device connected to the DIY-device.<br>
     * C type : CorsairChannelDeviceInfo*
     */
    public CorsairChannelDeviceInfo.ByReference devices;

    public CorsairChannelInfo() {
        super();
    }

    /**
     * @param totalLedsCount total number of LEDs connected to the channel.<br>
     * @param devicesCount   number of LED-devices (fans, strips, etc.) connected to the channel which is controlled by the DIY device.<br>
     * @param devices        array containing information about each separate LED-device connected to the channel controlled by the DIY device. Index of the LED-device in array is same as the index of the LED-device connected to the DIY-device.<br>
     *                       C type : CorsairChannelDeviceInfo*
     */
    public CorsairChannelInfo(int totalLedsCount, int devicesCount, CorsairChannelDeviceInfo.ByReference devices) {
        super();
        this.totalLedsCount = totalLedsCount;
        this.devicesCount = devicesCount;
        this.devices = devices;
    }

    public CorsairChannelInfo(Pointer peer) {
        super(peer);
    }

    protected List<?> getFieldOrder() {
        return Arrays.asList("totalLedsCount", "devicesCount", "devices");
    }

    public static class ByReference extends CorsairChannelInfo implements Structure.ByReference {

    }

    public static class ByValue extends CorsairChannelInfo implements Structure.ByValue {

    }

}
